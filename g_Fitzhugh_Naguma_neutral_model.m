clear; close all;clc;
%-----------------------------------------------------------------------------------------------------------%
 %initial conditions
%------------------------------------------------------------------------------------------------------------%
        h=0.001; T=30;
        v_k0=5;   v_k1=0;    w_k0=0;    w_k1=0;
        m_k0=2;    m_k1=0;    n_k0=0;    n_k1=0;
        
        f_k0=v_k0;  f_k1=0;   g_k0=w_k0;  g_k1=0;
        x_k0=m_k0;  x_k1=0;   y_k0=n_k0;  y_k1=0;
        a_k0=v_k0;  a_k1=0;   b_k0=w_k0;  b_k1=0;
        r_k0=m_k0;  r_k1=0;   s_k0=n_k0;  s_k1=0;
%------------------------------------------------------------------------------------------------------------%
 %parameter declaration
%------------------------------------------------------------------------------------------------------------%
        a_v=2.4; b_v=4.5; c_v=4.5; K1=10; K2=5;
        a_m=1.5; b_m=2.5;  c_m=6.5;
%------------------------------------------------------------------------------------------------------------%
 for i=0:h:T
     I_1=sin(0.8*i);
     I_2=cos(0.3*i);
%------------------------------------------------------------------------------------------------------------%
  % neuron model one
%------------------------------------------------------------------------------------------------------------%
    v_k1=v_k0 + h*(c_v*(v_k0 + c_v*w_k0 - (v_k0^3)/3 + I_1));
    w_k1=w_k0 + h*(-1)*(v_k1 - a_v + b_v*w_k0);
%------------------------------------------------------------------------------------------------------------%
  % neuron model two
%------------------------------------------------------------------------------------------------------------%
    m_k1=m_k0 + h*(c_m*(m_k0 + c_m*n_k0 - (m_k0^3)/3 + I_2));
    n_k1=n_k0 + h*(-1)*(m_k1 - a_m + b_m*n_k0);
%------------------------------------------------------------------------------------------------------------%
  % complete synchronization oscillator 
%------------------------------------------------------------------------------------------------------------%
    f_k1=f_k0 + h*(c_v*(f_k0 + c_v*g_k0 - (f_k0^3)/3 + K1*(x_k0 - f_k0) + I_1));
    g_k1=g_k0 + h*(-1)*(f_k1 - a_v + b_v*g_k0);
    x_k1=x_k0 + h*(c_m*(x_k0 + c_m*y_k0 - (x_k0^3)/3 + K2*(f_k1 - x_k0) + I_2));
    y_k1=y_k0 + h*(-1)*(x_k1 - a_m + b_m*y_k0);
%------------------------------------------------------------------------------------------------------------%
 % complete anti-synchronization oscillator 
%------------------------------------------------------------------------------------------------------------%
    a_k1=f_k0 + h*(c_v*(a_k0 + c_v*b_k0 - (a_k0^3)/3 - K1*(r_k0 + a_k0) + I_1));
    b_k1=b_k0 + h*(-1)*(a_k1 - a_v + b_v*b_k0);
    r_k1=r_k0 + h*(c_m*(r_k0 + c_m*s_k0 - (r_k0^3)/3 - K2*(a_k1 + r_k0) + I_2));
    s_k1=s_k0 + h*(-1)*(r_k1 - a_m + b_m*s_k0); 
%------------------------------------------------------------------------------------------------------------%
  %handling output data
%------------------------------------------------------------------------------------------------------------%
ind=round((1 + (i*(1/h))));
data.t(ind)=i;
data.v(ind)=v_k1; data.w(ind)=w_k1;
data.m(ind)=m_k1; data.n(ind)=n_k1;
data.f(ind)=f_k1; data.g(ind)=g_k1;
data.x(ind)=x_k1; data.y(ind)=y_k1;
data.a(ind)=a_k1; data.b(ind)=b_k1;
data.r(ind)=r_k1; data.s(ind)=s_k1;
%------------------------------------------------------------------------------------------------------------%
% state assigniment
%------------------------------------------------------------------------------------------------------------%
v_k0=v_k1;          w_k0=w_k1;
m_k0=m_k1;          n_k0=n_k1;
f_k0=f_k1;          g_k0=g_k1;
x_k0=x_k1;          y_k0=y_k1;
a_k0=a_k1;          b_k0=b_k1;
r_k0=r_k1;          s_k0=s_k1;
%------------------------------------------------------------------------------------------------------------%
 end
%------------------------------------------------------------------------------------------------------------%
 %Original Systems
%------------------------------------------------------------------------------------------------------------%
    figure('color','white','Name','Original Systems','NumberTitle','off')
    subplot(2,3,1)
    comet(data.t, data.v)
    title('neuron one before synchronization')
    subplot(2,3,2)
    comet(data.t, data.m)
    title('neuron two before synchronization')
    subplot(2,3,3)
    comet(data.t, data.f)
    title('neuron one after synchronization')
    subplot(2,3,4)
    comet(data.t, data.x)
    title('neuron two after synchronization')
    subplot(2,3,5)
    comet(data.t, data.a)
    title('neuron one after  anti-synchronization')
    subplot(2,3,6)
    comet(data.t, data.r)
    title('neuron one after  anti-synchronization')
%------------------------------------------------------------------------------------------------------------%
 
